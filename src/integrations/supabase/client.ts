
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://ifcroxzbgdqlzoymyyfw.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlmY3JveHpiZ2RxbHpveW15eWZ3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDM2NTg1NDYsImV4cCI6MjA1OTIzNDU0Nn0.AjioEMDkfQyIbfulP7BG_V7l2qia7pY7-yRdUeL6UWI";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true
  }
});

// Helper functions for soft deletion and tracking
export const softDelete = async (table: string, id: string, userId: string) => {
  return await supabase
    .from(table as any)
    .update({ 
      deleted_at: new Date().toISOString(),
      deleted_by: userId
    })
    .eq('id', id);
};

export const restoreDeleted = async (table: string, id: string) => {
  return await supabase
    .from(table as any)
    .update({ 
      deleted_at: null,
      deleted_by: null
    })
    .eq('id', id);
};

export const getSalesWithUserInfo = async (includeDeleted = false) => {
  let query = supabase
    .from('transactions')
    .select(`
      *,
      created_by_user:profiles!created_by(email),
      updated_by_user:profiles!updated_by(email),
      deleted_by_user:profiles!deleted_by(email)
    `);

  if (!includeDeleted) {
    query = query.is('deleted_at', null);
  }
    
  return await query.order('created_at', { ascending: false });
};
